% The purpose of this program is to take the record files from
% AudStimPres (or other files that include the trial_rec variable) and use
% them to segment continuous EEG data aquired with the stimuli generated by
% those files. Breya Walker 2015


clear
clc
filename=('C:\Users\breya\Desktop\MP materials\MP_Data_2015\MP023.xlsx'); % Name the Excel output file.

params = open('C:\Users\breya\Desktop\MP materials\MP_Data_2015\MP023.mat') % Open the .mat file that contains the stim file variables
EEG = load('C:\Users\breya\Desktop\MP materials\MP_Data_2015\MP023emcp1-30'); % Read data from the EEG data file (text output from EEGLAB)
start_pt = 1;
EEG = EEG';
n_pts = size(EEG);
n_pts = n_pts(1);

% Need to define
EEG_sample_rate=256; % in Hz
%SOA=.1; % in seconds
n_columns=6;
data_column=2;
max_art=40; % Artifact threshold (plus or minus) for epoch rejection.

EEG_period=1000/EEG_sample_rate;
trialdur=(params.SOA*1000); % Takes direction of each trial from the output file in seconds and converts it to ms
trialnsp=(trialdur/EEG_period); % Computes number of EEG data points in each trial (in seconds)
%fixed_trialnsp=fix(trialnsp+1);
trialnsp=fix(trialnsp);

n_trials=params.n_trials;
trial_type=params.trial_rec;

% SOA=SOA*1000;
epoch_dur=600; % Epoch duration, INCLUDING baseline
epoch_nsp=round(epoch_dur/EEG_period);
baseline_dur=100;
baseline_nsp=round(baseline_dur/EEG_period);
latency= linspace(-100,500,154); %epoc window timeframe (-100 to 500ms) and number of points per trial which is trialsnsp;

stim_chan = 6;


% Find first "trigger"
for x = start_pt:100000;
   if EEG(x,stim_chan) >= 40 & mean(EEG(x:x+25,stim_chan)) >= 40 & EEG(x-1,stim_chan) < 40 % THRESHOLD FOR ONSET OF FIRST STIMULUS
       trigs(1) = x;
       x=x+1;
       break
   end
end


% Find "triggers" for remaining trials
for m = 2:1000;
    for y = x:n_pts;
       if EEG(y,stim_chan) >= 40 & mean(EEG(y:y+25,stim_chan)) >= 40 & EEG(y-1,stim_chan) < 40 % THRESHOLD FOR ONSET OF FIRST STIMULUS
           trigs(m) = y;
           x=y+trialnsp-25;
           break
       end
    end
end
           

freq=0;
rare=0;
reject_freq=0;
reject_rare=0;
ERP_freq=zeros(epoch_nsp,n_columns);
ERP_rare=zeros(epoch_nsp,n_columns);

% Segment trials, reject artifacts, and create averages
for i = 1:n_trials;
    
    trial_start = trigs(i) - baseline_nsp;
    single = EEG(trial_start:trial_start+trialnsp,1:n_columns); % Identify individual epoch based on trigger
    for d = 1:n_columns;
        single_base(d) = mean(single(1:baseline_nsp,d)); % Compute mean of baseline
        single(:,d) = single(:,d) - single_base(d); % Subtract baseline from each data point in epoch
    end
    
    % PARAMETERS FOR ARTIFACT REJECTION
    for c = data_column:5;
        for j = 1:epoch_nsp-10;
            if max(single(j:j+10,c)) - min(single(j:j+10,c)) == 0 % Reject trials that have flatlines
                reject=1;
                break
            elseif max(single(:,c))>max_art || abs(min(single(:,c)))>max_art % Reject trials that exceed threshold
                reject=1;
                break
            elseif abs(single(j,c)-single(j+1,c)) > 100 % Reject trials with sudden increases or decreases
                reject=1;
                break
            else reject=0;
            end
        end
        if reject==1;
            break
        end
    end
    
    
    % Assign to appropriate bin
    if trial_type(1,i)==1 & reject==1
        reject_freq=(reject_freq+1);
    elseif trial_type(1,i)==1 & reject==0
        ERP_freq=ERP_freq+single;
        freq=freq+1;
    elseif trial_type(1,i)==2 & reject==1
        reject_rare=(reject_rare+1);
    elseif trial_type(1,i)==2 & reject==0
        ERP_rare=ERP_rare+single;
        rare=rare+1;
    end
end

% Display number of accepted and rejected trials
freq
rare
reject_freq
reject_rare

ERP_freq=ERP_freq/freq;
ERP_rare=ERP_rare/rare;

tones_freq=(ERP_freq(:,6));
tones_rare=(ERP_rare(:,6));


%Plot waveforms
figure('Name','New Fig');

% Raw EEG prior to first stimulus
subplot(5,1,1);
plot(EEG(start_pt:trigs(1),6))

% Data channel 1
subplot(5,1,2);
fig1=plot(tones_freq);
set(fig1,'Color','black');
hold;
fig2=plot(tones_rare);
set(fig2,'Color','blue');
fig3=plot(ERP_freq(:,data_column)*40);
set(fig3,'Color','red');
fig4=plot(ERP_rare(:,data_column)*40);
set(fig4,'Color','green');
axis([0 (baseline_nsp+epoch_nsp) -300 300]);
hold off;

% Data channel 2
subplot(5,1,3);
fig1=plot(tones_freq);
set(fig1,'Color','black');
hold;
fig2=plot(tones_rare);
set(fig2,'Color','blue');
fig3=plot(ERP_freq(:,data_column+1)*40);
set(fig3,'Color','red');
fig4=plot(ERP_rare(:,data_column+1)*40);
set(fig4,'Color','green');
axis([0 (baseline_nsp+epoch_nsp) -300 300]);
hold off;

% Data channel 3
subplot(5,1,4);
fig1=plot(tones_freq);
set(fig1,'Color','black');
hold;
fig2=plot(tones_rare);
set(fig2,'Color','blue');
fig3=plot(ERP_freq(:,data_column+2)*40);
set(fig3,'Color','red');
fig4=plot(ERP_rare(:,data_column+2)*40);
set(fig4,'Color','green');
axis([0 (baseline_nsp+epoch_nsp) -300 300]);
hold off;

% Data channel 4
subplot(5,1,5);
fig1=plot(tones_freq);
set(fig1,'Color','black');
hold;
fig2=plot(tones_rare);
set(fig2,'Color','blue');
fig3=plot(ERP_freq(:,data_column+3)*40);
set(fig3,'Color','red');
fig4=plot(ERP_rare(:,data_column+3)*40);
set(fig4,'Color','green');
axis([0 (baseline_nsp+epoch_nsp) -300 300]);
hold off;


% Write data to Excel file
xlswrite(filename,ERP_freq,'ERP freq');
xlswrite(filename,ERP_rare,'ERP rare');





